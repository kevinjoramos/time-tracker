{
  "swagger": "2.0",
  "info": {
    "title": "Time Tracker API",
    "description": "Track the time you spend.",
    "version": "1.0.0"
  },
  "host": "time-tracker-591z.onrender.com",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/google": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/timers": {
      "get": {
        "description": "Lists all timers belonging to the user. Route is protected via authentication.",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/new-timer": {
      "post": {
        "description": "Creates a new timer assigned to the user. Route is protected via authentication.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryName": {
                  "example": "Homework"
                },
                "color": {
                  "example": "#0000FF"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/timer/{id}": {
      "put": {
        "description": "Replaces an existing timer belonging to the user. Route is protected via authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryName": {
                  "example": "Homework"
                },
                "color": {
                  "example": "#0000FF"
                },
                "hoursLogged": {
                  "example": 10
                },
                "minutesLogged": {
                  "example": 10
                },
                "isRunning": {
                  "example": false
                },
                "timeToggled": {
                  "example": "2023-05-21T05:32:53.682Z"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "description": "Deletes a timer belonging to the user. Route is protected via authentication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}